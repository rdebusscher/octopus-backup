=== 0.9.7.2

. Maven archetypes for a basic Java EE 7 web application

=== 0.9.7.1

. Support for IdentityStores from Java EE Security API (Java EE 8) but also useable on Java EE 7 servers.
. Support for Key deriviation functions like PBKDF2 as password hashing algorithms.
. Improvement in the implementation of the OctopusSSOConverter (user info which is transferred from server to client) and possibility to not send some keys from userInfo map to SSO client.
. Support for custom _scope_ values in the OpenId Connect protocol (server side)
. Support for multiple iterations within the hashing of password through the parameter +hashIterations+
. Custom validation of JWT claims with user info.
. Possibility to retrieve User permissions for external (non-Octopus) OpenId Connect clients (see SSO.scope.user.permissions parameter)
. @PublicAPI to indicates classes which should be stable between releases (Safe to use by developers)

=== 0.9.7

. String based Permissions.
. Octopus SSO (Server and client modules) (Java EE 7 only) - OAuth2 and OpenIdConnect compatible.
. Principal and permission transfer within header to JAX-RS endpoint (Java EE 7 only) for Self Contained Systems support.
. Octopus OAuth2 module (like Google, Twitter, ..) Java EE 6+.
. Adding roles as groups of permissions concept and string based roles. (support for NIST RBAC - Role based Access Control)
. Support for advanced Authorization rules based on custom annotation and Developer extended Permission class(es).
. TwoStep authentication with support for sending OTP value and TOTP (FreeOTP, Google Authenticator, ...).
. Protection for Session fixation and hijacking.
. Programmatic define permissions for URLs.
. Additional filter _userRequired_, _rate_, ...
. Initial support for java SE (CAS SE, Password Grant OAuth2/OpenId Connect, ...).
. Concept ValidatedAuthenticationToken which needs no CredentialsMatcher.
. Redesigned fakeLogin module useable for all authentication mechanisms.
. securedURLs.ini file is optional.

Breaking changes

. removed inner class DummyOAuth2AuthenticationToken : TODO Verify the possible impact on apps.
. removed LogoutHandler.preLogoutAction, use CDI eventing instead ( @Observes LogoutEvent)
. Removed artefact be.c4j.ee.security.octopus:octopus-sso-client. You should use the new SSO server and Client modules.
. UserInfo keys are now Object and no longer Serializable. (AuthenticationInfoBuilder and UserPrincipal.userInfo for example)
. Method OctopusSecurityContext.loginWithRedirect is moved to new OctopusJSFSecurityContext class.
. CAS client is upgraded and support for SAML (with CAS server) is only available by adding org.jasig.cas.client:cas-client-support-saml
. _be.c4j.ee.security.shiro.URLPermissionProtector_ is removed, please use CDI bean implementations of _be.c4j.ee.security.url.ProgrammaticURLProtectionProvider_
. No longer possible to use OAuth2 modules as SSO server. Use Octopus SSO server (OIDC based) and delegate authentication to OAuth2. Use Octopus SSO server features to retrieve info.
. Several classes related to the fakeLogin module are renamed, relocated or changed. Possibily this has impact on your code.

=== 0.9.6.5

. Support of System accounts within @Startup methods.

=== 0.9.6.4

. Additional CDI bean which allows to add entries for the userInfo map of UserPrincipal (SSO client module)
. @CheckResult interceptor for verifying permission based on method result.
. Support for Keycloak as the authentication provider.
. none filter to block all access to the URL pattern
. Some fixes (Exception handling) related to OAuth2

=== 0.9.6.3

. Support for authentication based on JWT tokens on the header of HTTPRequest.
. Support for DynamicColumn of PrimeFaces DataTable.
. For REST calls, authentication info is never stored also when the session is available.

=== 0.9.6.2

. Support for the CSRF token of Google OAuth2 (state parameter).
. You can register a custom Shiro filter to some or all URL programmatic.
. Support for GitHub and Linked OAuth2.
. Support for multiple OAuth2 providers within the same application.

Breaking changes

. The Token class from Scribe dependency changed to a new package. Possibly you have used it in LoginAuthenticationTokenProvider or some integration test using OAuth2User.

=== 0.9.6.1

. permissionListener tag to change JSF Attributes based on security requirements.
. Configurable logout URL.
. Support for CAS SSO server.
. BASE64 encoded hashed password support (HEX already supported).

=== 0.9.6

. New module structure to allow multiple OAuth2 providers.
. Easier support for external password validations like LDAP.
. Propagation of security information to asynchronous started process. (@Asynchronous)
. Possibility to define Octopus configuration outside of WAR.
. Possibility to define additional shiro.ini files.
. Using system accounts (process related and not user related), mainly for background processes.
. Security Annotations rework (not completely backward compatible)
. Auditing access.
. Named permission and role filter where only one of the permissions/roles need to be satisfied. (instead of all)


Breaking changes

. Security annotations on method level override those on class level.
. Test module received a different artifact
+
                    <groupId>be.c4j.ee.security.octopus</groupId>
                    <artifactId>fakeLogin</artifactId>

. Authentication modules (oracle and OAuth2Google) received a different artifact
+
                    <groupId>be.c4j.ee.security.octopus.authentication</groupId>

=== 0.9.5

. Module restructering to support Java EE 6 and Java EE 7 servers.
. Plugin mechanism to allow different authentication plugins.
. Using Oracle database credentials is now an authentication plugin.
. Support for OAuth2 providers as authentication. Google+ only for the moment.
. Support for JAX-RS controllers.
. Test module so that OAuth2 provider is not needed during development.
. Apache CODI replaced by DeltaSpike
. Apache MyFaces Extensions Validator (ExtVal) is replaced by Jerry.

Breaking changes

. Parameter of +be.c4j.ee.security.realm.SecurityDataProvider.getAuthenticationInfo()+ is now *AuthenticationToken* and no longer _UsernamePasswordToken_.